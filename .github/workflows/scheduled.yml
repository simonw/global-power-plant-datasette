name: Fetch latest data and deploy with Datasette

on:
  push:
  workflow_dispatch:
  schedule:
    - cron:  '32 0 * * 1'

jobs:
  scheduled:
    runs-on: ubuntu-latest
    steps:
    - name: Check out this repo
      uses: actions/checkout@v2
    - name: Check out wri/global-power-plant-database
      uses: actions/checkout@v2
      with:
        repository: wri/global-power-plant-database
        path: global-power-plant-database
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - uses: actions/cache@v2
      name: Configure pip caching
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Build global-power-plants.db database
      run: csvs-to-sqlite global-power-plant-database/output_database/global_power_plant_database.csv global-power-plants.db -i country_long -i fuel1 -i owner -f name --table global-power-plants
    - name: Set variables to decide if we should deploy
      id: decide_variables
      run: |-
        echo "##[set-output name=latest;]$(datasette inspect global-power-plants.db | jq '. | to_entries[] | .value.hash' -r)"
        echo "##[set-output name=deployed;]$(curl -s https://global-power-plants.datasettes.com/-/databases.json | jq '.[0].hash' -r)"
    - name: Set up Cloud Run
      if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, 'DEPLOY') || steps.decide_variables.outputs.latest != steps.decide_variables.outputs.deployed
      uses: google-github-actions/setup-gcloud@master
      with:
        version: '275.0.0'
        service_account_email: ${{ secrets.GCP_SA_EMAIL }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
    - name: Deploy to Cloud Run
      if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, 'DEPLOY') || steps.decide_variables.outputs.latest != steps.decide_variables.outputs.deployed
      run: |-
        gcloud config set run/region us-central1
        gcloud config set project datasette-222320
        datasette publish cloudrun global-power-plants.db \
          --service global-power-plants \
          -m metadata.json \
          --branch=main \
          --install=datasette-cluster-map \
          --install=datasette-graphql \
          --extra-options="--setting facet_time_limit_ms 1000 --setting trace_debug 1"
